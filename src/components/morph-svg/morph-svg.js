import anime from 'animejs/lib/anime.min';
import ScrollMagic from 'scrollmagic/scrollmagic/minified/ScrollMagic.min.js';
import 'debug.addIndicators';
import Component from '../../common/js/component';
import { commonComponents } from '../../common/js/commonComponents';

class MorphSvg extends Component {
    constructor(nRoot, parent) {
        super(nRoot, 'morph-svg');
        this.index = 0;
        this.delay = 0;
        this.landmarks = null;
        if (this.nRoot.hasAttribute('data-morph-svg')) {
            if (this.nRoot.getAttribute('data-morph-svg') === '0') {
                this.landmarks = [
                    {
                        d: 'M740.043 283.231C836.586 145.507 793.883 9.04137 455.692 125.715C363.236 157.612 187.59 39.7132 112.658 60.283C24.4537 84.4965 -33.7157 255.726 70.1481 356.66C149.678 433.948 275.561 462.22 416.769 449.495C557.978 436.769 693.752 349.268 740.043 283.231Z',
                    },
                    {
                        d: 'M717.5 225C770.5 70.5 663.5 -7.49999 422.692 60.7153C328.591 87.372 143.932 40.1454 69.0003 60.7152C-19.2041 84.9286 -13.8635 188.565 90.0004 289.5C169.53 366.787 346.291 405.225 487.5 392.5C628.709 379.775 691.332 301.282 717.5 225Z',
                    },
                    {
                        d: 'M676.501 344C793.392 227.107 733.001 11.5008 485.501 89.0001C333.377 136.634 283.5 53.9998 138.5 54C-26.5001 54.0003 -16.9996 208.501 77.0002 324C147.002 410.012 302.291 466.725 443.5 454C584.709 441.274 608.5 412.001 676.501 344Z',
                    },
                    {
                        d: 'M703.5 356C757.228 260 678.847 126 413.5 126C242 126 232.399 21.139 120.5 56C-9.50025 96.5 -20.3639 255.066 83.5 356C137 407.992 310.291 473.226 451.5 460.5C592.708 447.775 664.113 426.374 703.5 356Z',
                    },
                    {
                        d: 'M778.5 268.252C843.872 135.252 697.023 -68.729 426.5 58.2515C353 92.7515 186.931 91.1817 112 111.752C14.9999 138.38 -27.8639 260.317 76 361.252C155.53 438.539 465.5 442.466 562 425.752C658.5 409.037 742.619 341.251 778.5 268.252Z',
                    },
                ];
            } else if (this.nRoot.getAttribute('data-morph-svg') === '1') {
                this.landmarks = [
                    {
                        d: 'M139 34C139 64.4503 98.6229 102 68.1193 102C37.6156 102 0 77.3152 0 46.8649C0 16.4146 22.8871 0 53.3907 0C83.8944 0 139 3.54971 139 34Z',
                    },
                    {
                        d: 'M140 17.0001C140 47.4504 92.0037 94 61.5 94C30.9963 94 0.5 63.9503 0.5 33.5C0.5 3.04973 38.9963 6.50004 69.5 6.50004C100.004 6.50004 140 -13.4502 140 17.0001Z',
                    },
                    {
                        d: 'M133 11C148 32.0002 129.5 90.5 75 94C44.4963 94 0.5 59.9502 0.5 29.4999C5.5 -1.0001 30.4963 6.49993 61 6.49993C91.5037 6.49993 118 -10.0001 133 11Z',
                    },
                    {
                        d: 'M178 28.4999C197.444 78.4998 158.5 106.5 104.5 106.5C56.5 106.5 0 72.4501 0 41.9998C0 -2.50007 45.4963 10.9999 76 10.9999C117.5 10.9999 158.556 -21.5 178 28.4999Z',
                    },
                    {
                        d: 'M150 86.9999C146.5 120.5 81.0037 130 50.5 130C19.9963 130 0.5 87.9507 0.5 57.5004C0.5 -9.99971 48.5 -4.99983 78 9.9999C109.5 21.4999 153.5 53.5 150 86.9999Z',
                    },
                ];
            } else if (this.nRoot.getAttribute('data-morph-svg') === '2') {
                this.landmarks = [
                    {
                        d: 'M178 82.3256C178 128.563 139.103 180 92.843 180C46.5831 180 -11.8584 101.86 2.10186 50.2324C5.87485 36.2791 18.6627 0 64.9226 0C111.183 0 178 36.0878 178 82.3256Z',
                    },
                    {
                        d: 'M177 104C177 153 143.26 185.5 97 185.5C29.5 185.5 -20.3816 67.8558 9.49997 23.5002C41.4999 -23.9999 84 14.4476 116.5 29.5002C164 51.5001 177 77.5001 177 104Z',
                    },
                    {
                        d: 'M129.5 62.5C129.5 108.738 187 160.5 133.5 181C90 197.668 0.5 159 0.5 77.5C0.5 50 0.5 0 67.5 0C113.76 0 133.5 20 129.5 62.5Z',
                    },
                    {
                        d: 'M160.5 87C176.942 130.347 113 193.856 62.5 170.5C24.5 152.925 46 131.423 14.5 87.0001C-17.0001 42.5768 9.24337 -2.88242 46.0001 0.500084C118.5 7.17182 148.172 54.5002 160.5 87Z',
                    },
                    {
                        d: 'M182.5 119.5C186.126 168.867 110.5 140.5 78.5 140.5C32.2401 140.5 -10 119 2.49999 74.5C9.70845 48.838 23.2401 0.499914 69.5 0.5C101 0.5 176 31 182.5 119.5Z',
                    },
                ];
            } else if (this.nRoot.getAttribute('data-morph-svg') === '3') {
                this.landmarks = [
                    {
                        d: 'M70.7486 29.1994C65.2486 55.6994 32.7485 66.6998 18.2485 60.1993C-6.75145 51.6998 -1.69477 13.754 7.74857 6.19936C22.7486 -5.80063 33.2485 2.69936 50.7486 6.19936C68.2487 9.69937 72.2727 21.8559 70.7486 29.1994Z',
                    },
                    {
                        d: 'M55.0001 54.5C49.5001 81 34.5002 98.5005 20.0002 92.0001C-4.99981 83.5005 -3.99986 30.0001 10.5001 14C22.7343 0.5 45.0002 -3.50007 60.5002 6.50003C76.0002 16.5001 57.6983 41.5001 55.0001 54.5Z',
                    },
                    {
                        d: 'M106.5 44C101 70.5 61.3906 87.1124 38.9997 79.5C13.9997 71.0004 -12.9991 22.6994 8.49991 5.50009C23.4999 -6.49994 37.2514 5.50012 64.9997 5.50001C92.7481 5.4999 112 17.5002 106.5 44Z',
                    },
                    {
                        d: 'M91.5 53C91.5 70.0294 50.3247 71.5567 25.3247 63.0571C0.324692 54.5576 -5.42921 37.0572 4.82447 15.5572C20.3243 -16.9429 55.5 10.9997 63 18C70.5 25.0002 91.5 27 91.5 53Z',
                    },
                    {
                        d: 'M67 37.9997C58.2906 48.6883 32.5 64.5004 18 58C-6.99997 49.5004 -0.499811 9.49964 11.7486 3.19926C26.2672 -4.26885 29.9999 8.5 47.5 12C65.0001 15.5 78 24.5 67 37.9997Z',
                    },
                ];
            } else if (this.nRoot.getAttribute('data-morph-svg') === '4') {
                this.landmarks = [
                    {
                        d: 'M242 141.117C242 190.953 163.839 219.323 120.248 199.771C45.0932 174.205 0 108.237 0 58.4009C0 8.56452 67.6397 -12.2846 120.248 7.26692C172.857 26.8184 242 91.2806 242 141.117Z',
                    },
                    {
                        d: 'M206.5 50.9999C206.5 100.836 131.09 175.052 87.5 155.5C12.3447 129.934 0.5 55.4999 0.5 33.0001C0.5 -6.99999 44.3913 -5.55149 97 14C149.609 33.5515 206.5 1.16354 206.5 50.9999Z',
                    },
                    {
                        d: 'M185 91.5C185 135.5 105.09 166.553 61.5 147C27 131.525 -7.49947 55.4997 2.49997 25.4999C13.8328 -8.50017 43.0001 -3.42318 84.5001 12C126 27.4232 185 31.5 185 91.5Z',
                    },
                    {
                        d: 'M155.5 115C155.5 164.836 94.5898 226.552 50.9997 207C-24.1555 181.434 7 134 7 100C7 50.1636 -1.60924 -15.5519 50.9995 3.99963C103.608 23.5511 155.5 65.1634 155.5 115Z',
                    },
                    {
                        d: 'M196.499 53.2518C196.499 103.088 153.499 187.752 83.4989 148.252C48.9989 128.784 10.6963 90.1525 1.99994 48.2519C-9.00009 -4.74827 31.4997 -6.74213 70.5 7.75187C109.5 22.2459 196.499 3.41547 196.499 53.2518Z',
                    },
                ];
            }
        } else {
            this.landmarks = [
                {
                    d: 'M63.9999 29.5C63.9999 46.0685 50.0685 64.5 33.4999 64.5C16.9314 64.5 -4.00016 36.4999 0.999875 17.9999C2.35122 13 6.93134 0 23.4999 0C40.0684 0 63.9999 12.9315 63.9999 29.5Z',
                },
                {
                    d: 'M80.5 46.9156C80.5 63.4841 54.5 72.916 40 66.4156C15 57.916 0 35.9844 0 19.4159C0 2.84735 22.5 -4.08411 40 2.41595C57.5 8.91602 80.5 30.347 80.5 46.9156Z',
                },
                {
                    d: 'M67 22C67 38.5685 53.5685 75 37 75C20.4315 75 0 46.5685 0 30C0 13.4315 3.93146 0 20.5 0C37.0685 0 67 5.43146 67 22Z',
                },
                {
                    d: 'M75.5 19C75.5 35.5685 53.5686 56 37 56C20.4315 56 0 42.5685 0 26C0 9.43146 12.4315 0.5 29 0.5C45.5685 0.5 75.5 2.43146 75.5 19Z',
                },
                {
                    d: 'M56.4802 28.5C50.5 52 30.4023 64 15 64C-0.402305 64 -2.39204 34.8963 4.98019 17.5C7.30436 12.0156 14.3126 0.5 30.4802 0.5C50.3126 0.499958 59.3615 17.1772 56.4802 28.5Z',
                },
                {
                    d: 'M71.5 29.5C66 56 33.5 67.0004 19 60.5C-6.00005 52.0004 -0.94337 14.0547 8.49998 6.50002C23.5 -5.49998 33.9999 3.00002 51.5 6.50002C69.0001 10 73.0241 22.1565 71.5 29.5Z',
                },
            ];
        }
        this.init = this.init.bind(this);
        this.sortLandmarks = this.landmarks.sort(() => 0.5 - Math.random());
        this.nRoot.querySelector('path').setAttribute('d', this.sortLandmarks[0].d);
        // this.schedule();

        // this.scene = new ScrollMagic.Scene({
        //     triggerElement: this.nRoot,
        //     triggerHook: 1,
        //     duration: '100%',
        // })
        //     .on('enter', () => {
        //         this.schedule();
        //     })
        //     .on('leave', () => {
        //         this.destroyLeave();
        //     })
        //     .addTo(commonComponents.ctrl);
    }

    init() {
        this.index++;
        this.index %= this.sortLandmarks.length;
        anime({
            targets: this.nRoot.querySelector('path'),
            d: {
                value: this.sortLandmarks[this.index].d,
                duration: 2000,
            },
            elasticity: 100,
            easing: 'easeOutQuad',
        });
    }

    schedule() {
        this.timer = setTimeout(() => {
            this.init();
            this.schedule();
        }, this.delay);
        if (this.delay === 0) {
            this.delay = 1000;
        }
    }

    destroyLeave() {
        this.delay = 0;
        clearTimeout(this.timer);
    }

    destroy() {
        clearTimeout(this.timer);
        // this.scene.destroy();
        // commonComponents.ctrl.destroy(); /* ПОД ВОПРОСОМ */
    }
}

export default MorphSvg;
